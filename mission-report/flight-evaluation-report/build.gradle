plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'java'
    //noinspection SpellCheckingInspection
    id "io.freefair.lombok" version "5.2.1"
}

group = "${rootProject.group}.reports"

project.ext {
    artifactDisplayName = "Abort Mission - Flight Evaluation Report"
    artifactDescription = "Core reporting module of Abort Mission generating reports from telemetry data."
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter:${rootProject.ext.springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf:${rootProject.ext.springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-json:${rootProject.ext.springBootVersion}"
    implementation "com.networknt:json-schema-validator:${rootProject.ext.jsonSchemaValidatorVersion}"
    annotationProcessor "org.projectlombok:lombok:${rootProject.ext.lombokVersion}"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${rootProject.ext.springBootVersion}"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${rootProject.ext.springBootVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter:${rootProject.ext.jupiterPlatformVersion}"
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact bootJar
            artifactId = "abort.${project.name}"
            pom {
                name = "${project.artifactDisplayName}"
                description = "${project.artifactDescription}"
                url = rootProject.ext.repoUrl
                packaging = "jar"
                licenses {
                    license {
                        name = rootProject.ext.licenseName
                        url = rootProject.ext.licenseUrl
                    }
                }
                developers {
                    developer {
                        id = rootProject.ext.maintainerId
                        name = rootProject.ext.maintainerName
                        url = rootProject.ext.maintainerUrl
                    }
                }
                scm {
                    connection = rootProject.ext.scmConnection
                    developerConnection = rootProject.ext.scmConnection
                    url = rootProject.ext.scmProjectUrl
                }
                withXml {
                    asNode().dependencies.findAll() {
                        def parent = it.parent()
                        parent.remove(it)
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
