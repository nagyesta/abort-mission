# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
# Rebuild 2.7.2

name: JavaCI

on:
  push:
    branches: [main]
    paths-ignore:
      - "README.md"
      - "**/README.md"
      - "CODE_OF_CONDUCT.md"
      - "CONTRIBUTING.md"
      - "pull_request_template.md"
      - ".lift/.toml"
      - "**/.lift/.toml"
      - "SECURITY.md"
      - "LICENSE"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/assets/**"
      - ".github/workflows/**"
      - ".github/pr-labeler.yml"
      - "renovate.json"
      - ".whitesource"
      - "gradle/libs.versions.toml"
      - "gradle/verification-metadata.xml"
      - "gradle/wrapper/gradle-wrapper.properties"
      - "gradle/wrapper/gradle-wrapper.jar"
      - "gradlew"
      - "gradlew.bat"
      - "config/ossindex/exclusions.txt"
      - "gradle/verification-metadata-clean.xml"
      - "mission-report/flight-evaluation-report/node/package.json"
      - "mission-report/flight-evaluation-report/node/package-lock.json"
      - ".idea/**"
      - ".gitignore"
      - ".qlty/**"

permissions: read-all

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Set up build environment
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          token: ${{ secrets.PUBLISH_KEY }}
      - name: Set up JDK 17
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: temurin
          java-version: 17
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@06832c7b30a0129d7fb559bcc6e43d26f6374244 # v4.3.1
        with:
          cache-disabled: true
      - name: Build with Gradle
        run: >
          ./gradlew tagVersion build
          -PgithubUser=${{ secrets.PUBLISH_USER_NAME }}
          -PgithubToken=${{ secrets.PUBLISH_KEY }}
      - name: Decode key
        run: |
          mkdir -p ${{ runner.temp }}/.gnupg/
          echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 --decode > ${{ runner.temp }}/.gnupg/secring.gpg
      - name: Publish with Gradle
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          ./gradlew publish publishToSonatype sonar closeAndReleaseSonatypeStagingRepository
          -PgithubUser=${{ secrets.PUBLISH_USER_NAME }}
          -PgithubToken=${{ secrets.PUBLISH_KEY }}
          -PossrhUsername=${{ secrets.OSSRH_USER }}
          -PossrhPassword=${{ secrets.OSSRH_PASS }}
          -Psigning.keyId=${{ secrets.SIGNING_KEY_ID }}
          -Psigning.password=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
          -Psigning.secretKeyRingFile=${{ runner.temp }}/.gnupg/secring.gpg
      - name: Clean-up GPG key
        if: always()
        run: |
          rm -rf ${{ runner.temp }}/.gnupg/
