# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: JavaCI-PR

on:
  push:
    branches: [ main]
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '**/README.md'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'pull_request_template.md'
      - '.lift/.toml'
      - '**/.lift/.toml'
      - 'SECURITY.md'
      - 'LICENSE'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/assets/**'
      - '.github/workflows/**'
      - '!.github/workflows/gradle-ci.yml'
      - '.github/pr-labeler.yml'
      - 'renovate.json'
      - '.whitesource'
      - 'config/ossindex/exclusions.txt'

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      # Set up build environment
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4.5.0
        with:
          distribution: temurin
          java-version: 17
      - name: Decode key (if Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          mkdir -p ${{ runner.temp }}/.gnupg/
          echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 --decode > ${{ runner.temp }}/.gnupg/secring.gpg
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@cc4fc85e6b35bafd578d5ffbc76a5518407e1af0 # v4.2.1
        with:
          cache-disabled: true
      - name: Build with Gradle (if Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: >
          ./gradlew printVersion build sign
          -Psigning.keyId=${{ secrets.SIGNING_KEY_ID }}
          -Psigning.password=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
          -Psigning.secretKeyRingFile=${{ runner.temp }}/.gnupg/secring.gpg
      - name: Build with Gradle (if Windows)
        if: ${{ matrix.os != 'ubuntu-latest' }}
        run: ./gradlew printVersion build
      - name: Clean-up GPG key (if Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          rm -rf ${{ runner.temp }}/.gnupg/
      - name: Upload Test reports - All
        if: always()
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: test-report-abort-mission-${{ matrix.os }}
          path: |
            mission-control/build/reports/tests/test
            boosters/**/build/reports/tests/test
            mission-report/**/build/reports/tests/test
          retention-days: 5
      - name: Upload coverage to Codecov - Core
        uses: codecov/codecov-action@288befbd1044bd1756afb0bdae077549e0ddb31f # v5.0.5
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./mission-control/build/reports/jacoco/report.xml
          flags: core
      - name: Upload coverage to Codecov - Boosters - JUnit4
        uses: codecov/codecov-action@288befbd1044bd1756afb0bdae077549e0ddb31f # v5.0.5
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./boosters/booster-junit4/build/reports/jacoco/report.xml
          flags: junit4
      - name: Upload coverage to Codecov - Boosters - Jupiter
        uses: codecov/codecov-action@288befbd1044bd1756afb0bdae077549e0ddb31f # v5.0.5
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./boosters/booster-junit-jupiter/build/reports/jacoco/report.xml
          flags: jupiter
      - name: Upload coverage to Codecov - Boosters - TestNG
        uses: codecov/codecov-action@288befbd1044bd1756afb0bdae077549e0ddb31f # v5.0.5
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./boosters/booster-testng/build/reports/jacoco/report.xml
          flags: testng
      - name: Upload coverage to Codecov - Boosters - Cucumber JVM
        uses: codecov/codecov-action@288befbd1044bd1756afb0bdae077549e0ddb31f # v5.0.5
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./boosters/booster-cucumber-jvm/build/reports/jacoco/report.xml
          flags: cucumber
      - name: Upload coverage to Codecov - Boosters - Testkit
        uses: codecov/codecov-action@288befbd1044bd1756afb0bdae077549e0ddb31f # v5.0.5
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./boosters/testkit/build/reports/jacoco/report.xml
          flags: testkit
      - name: Upload coverage to Codecov - Reporting - Flight Evaluation Report
        uses: codecov/codecov-action@288befbd1044bd1756afb0bdae077549e0ddb31f # v5.0.5
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./mission-report/flight-evaluation-report/build/reports/jacoco/report.xml,./mission-report/flight-evaluation-report/node/build/coverage/cobertura-coverage.xml
          flags: flighteval
