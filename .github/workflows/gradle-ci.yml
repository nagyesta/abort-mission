# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: JavaCI-PR

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths-ignore:
      - "README.md"
      - "**/README.md"
      - "CODE_OF_CONDUCT.md"
      - "CONTRIBUTING.md"
      - "pull_request_template.md"
      - ".lift/.toml"
      - "**/.lift/.toml"
      - "SECURITY.md"
      - "LICENSE"
      - ".github/**"
      - "!.github/workflows/gradle-ci.yml"
      - "renovate.json"
      - ".whitesource"
      - "config/ossindex/exclusions.txt"
      - ".idea/**"
      - ".gitignore"
      - ".qlty/**"

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      # Set up build environment
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          distribution: temurin
          java-version: 17
      - name: Decode key (if Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          mkdir -p ${{ runner.temp }}/.gnupg/
          echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 --decode > ${{ runner.temp }}/.gnupg/secring.gpg
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@017a9effdb900e5b5b2fddfb590a105619dca3c3 # v4.4.2
        with:
          cache-disabled: true
      - name: Build with Gradle (if Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          ./gradlew printVersion build sign sonar
          -Psigning.keyId=${{ secrets.SIGNING_KEY_ID }}
          -Psigning.password=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
          -Psigning.secretKeyRingFile=${{ runner.temp }}/.gnupg/secring.gpg
      - name: Build with Gradle (if Windows)
        if: ${{ matrix.os != 'ubuntu-latest' }}
        run: ./gradlew printVersion build
      - name: Clean-up GPG key (if Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          rm -rf ${{ runner.temp }}/.gnupg/
      - name: Upload Test reports - All
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test-report-abort-mission-${{ matrix.os }}
          path: |
            mission-control/build/reports/tests/test
            boosters/**/build/reports/tests/test
            mission-report/**/build/reports/tests/test
          retention-days: 5
