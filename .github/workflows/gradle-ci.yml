# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: JavaCI-PR

on:
  push:
    branches: [ main ]
    paths:
      - 'gradle/libs.versions.toml'
      - 'gradle/verification-metadata.xml'
      - 'gradle/wrapper/gradle-wrapper.properties'
      - 'config/ossindex/exclusions.txt'
      - '.github/workflows/gradle-ci.yml'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '**/README.md'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'pull_request_template.md'
      - '.lift/.toml'
      - '**/.lift/.toml'
      - 'SECURITY.md'
      - 'LICENSE'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/assets/**'
      - '.github/workflows/**'
      - '!.github/workflows/gradle-ci.yml'
      - '.github/pr-labeler.yml'
      - 'renovate.json'
      - '.whitesource'
      - 'gradle/libs.versions.toml'
      - 'config/ossindex/exclusions.txt'

permissions: read-all

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      # Set up build environment
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # v3.11.0
        with:
          distribution: temurin
          java-version: 11
      - name: 'Decode key (if Ubuntu)'
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          mkdir -p ${{ runner.temp }}/.gnupg/
          echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 --decode > ${{ runner.temp }}/.gnupg/secring.gpg
      - name: 'Build with Gradle (if Ubuntu)'
        uses: gradle/gradle-build-action@5056fa9d50478a14af3c9925c12ca02318659d3e # v2.4.1
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          arguments: |
            printVersion build sign
            -Psigning.keyId=${{ secrets.SIGNING_KEY_ID }}
            -Psigning.password=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
            -Psigning.secretKeyRingFile=${{ runner.temp }}/.gnupg/secring.gpg
      - name: 'Build with Gradle (if Windows)'
        uses: gradle/gradle-build-action@5056fa9d50478a14af3c9925c12ca02318659d3e # v2.4.1
        if: ${{ matrix.os != 'ubuntu-latest' }}
        with:
          arguments: printVersion build
      - name: 'Clean-up GPG key (if Ubuntu)'
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          rm -rf ${{ runner.temp }}/.gnupg/
      - name: 'Upload Test reports - All'
        if: always()
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: test-report-abort-mission-${{ matrix.os }}
          path: |
            mission-control/build/reports/tests/test
            boosters/**/build/reports/tests/test
            mission-report/**/build/reports/tests/test
            strongback/**/build/reports/tests/test
          retention-days: 5
      - name: Upload coverage to Codecov - Core
        uses: codecov/codecov-action@40a12dcee2df644d47232dde008099a3e9e4f865 # v3.1.2
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./mission-control/build/reports/jacoco/report.xml
          flags: core
      - name: Upload coverage to Codecov - Boosters - JUnit4
        uses: codecov/codecov-action@40a12dcee2df644d47232dde008099a3e9e4f865 # v3.1.2
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./boosters/booster-junit4/build/reports/jacoco/report.xml
          flags: junit4
      - name: Upload coverage to Codecov - Boosters - Jupiter
        uses: codecov/codecov-action@40a12dcee2df644d47232dde008099a3e9e4f865 # v3.1.2
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./boosters/booster-junit-jupiter/build/reports/jacoco/report.xml
          flags: jupiter
      - name: Upload coverage to Codecov - Boosters - TestNG
        uses: codecov/codecov-action@40a12dcee2df644d47232dde008099a3e9e4f865 # v3.1.2
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./boosters/booster-testng/build/reports/jacoco/report.xml
          flags: testng
      - name: Upload coverage to Codecov - Boosters - Cucumber JVM
        uses: codecov/codecov-action@40a12dcee2df644d47232dde008099a3e9e4f865 # v3.1.2
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./boosters/booster-cucumber-jvm/build/reports/jacoco/report.xml
          flags: cucumber
      - name: Upload coverage to Codecov - Boosters - Testkit
        uses: codecov/codecov-action@40a12dcee2df644d47232dde008099a3e9e4f865 # v3.1.2
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./boosters/testkit/build/reports/jacoco/report.xml
          flags: testkit
      - name: Upload coverage to Codecov - Reporting - Flight Evaluation Report
        uses: codecov/codecov-action@40a12dcee2df644d47232dde008099a3e9e4f865 # v3.1.2
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./mission-report/flight-evaluation-report/build/reports/jacoco/report.xml
          flags: flighteval
      - name: Upload coverage to Codecov - Strongback - Base
        uses: codecov/codecov-action@40a12dcee2df644d47232dde008099a3e9e4f865 # v3.1.2
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./strongback/strongback-base/build/reports/jacoco/report.xml
          flags: strongback
      - name: Upload coverage to Codecov - Strongback - H2 Supplier
        uses: codecov/codecov-action@40a12dcee2df644d47232dde008099a3e9e4f865 # v3.1.2
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./strongback/strongback-h2-supplier/build/reports/jacoco/report.xml
          flags: h2
      - name: Upload coverage to Codecov - Strongback - RMI Supplier
        uses: codecov/codecov-action@40a12dcee2df644d47232dde008099a3e9e4f865 # v3.1.2
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./strongback/strongback-rmi-supplier/build/reports/jacoco/report.xml
          flags: rmi
